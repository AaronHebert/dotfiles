### My base config with common setup appropriate for both home & work.

### PATH
export PATH="$PATH:$HOME/bin"
export PATH="$PATH:/usr/local/bin"
export PATH="$PATH:/bin"
export PATH="$PATH:/opt/homebrew/bin/"

### Sensitive ENVs (keys, passwords, &c.), source all *.env from ~/.secrets
### Load this early to avoid overwriting values defined in the main .zshrc
for file in ~/.secrets/*.env(DN); do
  if [[ -f "$file" ]]; then
    source "$file"
  fi
done

### Add defined ssh keys to agent
function addkeys() {
  arr=("key_1" "key_2", "...")
  if [[ $__SSH_KEYS_LOADED != "true" ]]; then
	  for val in "${arr[@]}"; do
		  ssh-add --apple-use-keychain ~/.ssh/"$val" || {
			  echo "Failed to add ssh key: $val"
		  }
	  done

	  echo "-– ssh keys loaded!"
	  export __SSH_KEYS_LOADED="true"
	fi
}

### Exports
export COMPOSE_DOCKER_CLI_BUILD=0
export DOCKER_DEFAULT_PLATFORM=linux/amd64
export DOCKER_BUILDKIT=0
export EDITOR="nvim"

### Telemetry
export APOLLO_TELEMETRY_DISABLED=true
export HOMEBREW_BAT=1
export HOMEBREW_NO_ANALYTICS=1
export HOMEBREW_NO_AUTO_UPDATE=1

### Fix macOS, because it gets worse with each release
export HOMEBREW_CASK_OPTS="--no-quarantine"

### ZSH
ZSH=$HOME/.oh-my-zsh
source $ZSH/oh-my-zsh.sh
eval "$(rbenv init - zsh)"

### Theme support
ZSH_THEME=""
autoload -U promptinit; promptinit
prompt pure

### NVM
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"

### Explicitly run the bundler version defined in Gemfile.lock
function bundle_v() {
  BUNDLEVERSION=$(tail -n -1 Gemfile.lock | tr -d '[:space:]')
  echo "---Running bundler with version ${BUNDLEVERSION} from Gemfile.lock---"
  bundler _"${BUNDLEVERSION}"_ "$@"
  echo "---Ran bundler with version ${BUNDLEVERSION}---"
}

function tunnel() {
	local service="$1"
	local action="$2"

  if [ "$service" = "mysql" ]; then
		if [ "$action" = "up" ]; then
    	echo "Opening tunnel to 3306 on $LAB_ADDR..."
    	ssh -M -S ~/.ssh/mysql.sock -f -N -T -L 3306:127.0.0.1:3306 $LAB_ADDR
		fi

		if [ "$action" = "down" ]; then
    	echo "Stopping tunnel to 3306 on $LAB_ADDR..."
  		ssh -S ~/.ssh/mysql.sock -O exit $LAB_ADDR
		fi
	fi

  if [ "$service" = "localstack" ]; then
		if [ "$action" = "up" ]; then
    	echo "Opening tunnel to 4566 on $LAB_ADDR..."
    	ssh -M -S ~/.ssh/localstack.sock -f -N -T -L 4566:127.0.0.1:4566 $LAB_ADDR
		fi

		if [ "$action" = "down" ]; then
    	echo "Stopping tunnel to 4566 on $LAB_ADDR..."
  		ssh -S ~/.ssh/localstack.sock -O exit $LAB_ADDR
		fi
	fi

	if [ "$service" = "status" ]; then
		echo "Status of tunnel to $LAB_ADDR ..."
		ssh -S ~/.ssh/localstack.sock -O check $LAB_ADDR
		ssh -S ~/.ssh/mysql.sock -O check $LAB_ADDR
  fi
}

### Aliases
alias l="eza -ablh --group-directories-first --no-git"
alias be="bundle_v exec"
alias dc="docker compose"
alias fixdns="sudo dscacheutil -flushcache; sudo killall -9 mDNSResponder; sudo killall -9 mDNSResponderHelper"
alias iclean="docker container prune && docker image prune"
alias idangle='docker rmi $(docker images -f "dangling=true" -q)'
alias kc="kubectl"
alias lzd="lazydocker"
alias qpatch="git add --all && git commit -m fix && git rebase -i HEAD~2"
alias rm="rm -I" # you never know…
alias tailscale="/Applications/Tailscale.app/Contents/MacOS/Tailscale"
alias vim="nvim"
alias ww="vim -c VimwikiIndex"
